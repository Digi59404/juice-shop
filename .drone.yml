kind: pipeline
name: default

steps:
- name: "[CACHE] Restore"
  image: meltwater/drone-cache:dev
  pull: true
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: S3_ACCESS
    AWS_SECRET_ACCESS_KEY:
      from_secret: S3_SECRET
  settings:
    endpoint: http://ewr1.vultrobjects.com
    region: us-east-1
    cache_key: '{{ .Commit.Branch }}'
    restore: true
    bucket: juice-shop-bucket
  mount:
    - node_modules
    
- name: "[INSTALL] Deps" 
  image: node
  commands:
  - npm install --package-lock
  depends_on:
    - "[CACHE] Restore"
  mount:
    - node_modules

- name: "[CACHE] Upload"
  image: meltwater/drone-cache:dev
  pull: true
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: S3_ACCESS
    AWS_SECRET_ACCESS_KEY:
      from_secret: S3_SECRET
  settings:
    endpoint: http://ewr1.vultrobjects.com
    region: us-east-1
    cache_key: '{{ .Commit.Branch }}'
    rebuild: true
    mount:
      - node_modules
    when:
      event: push
  depends_on:
    - "[INSTALL] Deps" 

- name: "[BUILD] Dockerfile"
  image: docker:dind
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  environment:
    DOCKERUSER: 'digi59404'
    DOCKERPASS:
      from_secret: DOCKERHUB
  commands:
  - docker login -u $DOCKERUSER -p $DOCKERPASS
  - docker build -t digi59404/juice-shop:test .
  - docker push digi59404/juice-shop:test
  depends_on:
    - "[INSTALL] Deps" 
    
- name: "[SECURITY] Scan Deps"
  image: registry.gitlab.com/gitlab-ci-utils/docker-dependency-check:latest
  environment:
    DC_PROJECT: "juice-shop"
  commands:
  - /usr/share/dependency-check/bin/dependency-check.sh --scan "./" --format ALL --project "$DC_PROJECT" --failOnCVSS 0
  depends_on:
    - "[INSTALL] Deps" 
  mount:
    - node_modules
    
- name: "[SECURITY] SEMGREP Scan"
  image: returntocorp/semgrep
  environment:
    SEMGREP_RULES: "p/default"
  commands:
  - semgrep ci
  depends_on:
    - "[INSTALL] Deps" 
  mount:
    - node_modules

- name: "[TEST] Frontend"
  image: node
  commands:
  - npm install -g @angular/cli --force
  - npm run test
  depends_on:
    - "[INSTALL] Deps" 
  mount:
    - node_modules

- name: "[TEST] Backend"
  image: node
  commands:
  - npm run test:server
  depends_on:
    - "[INSTALL] Deps" 
  mount:
    - node_modules
    
volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

trigger:
  branch:
  - master
